{
    "@id": "032112247X",
    "@type": "schema:CreativeWork",
    "dc:identifier": "032112247X",
    "dc:title": "Managing software requirements : a use case approach",
    "dc:creator": "http://id.loc.gov/authorities/names/n99256459",
    "dc:relation": "Addison-Wesley object technology series.",
    "dc:language": "en",
    "dc:publisher": "http://libcat.staffs.ac.uk/cgi-bin/koha/opac-search.pl?q=pb:Addison-Wesley,",
    "dc:description": "Enhanced descriptions from Syndetics: bull; New content, new theme, new subtitle! The use case approach is a cornerstone technique, and a more prescriptive approach is employed bull; Proven "team skills " exercises help the reader roll the requirements process out to the rest of the team bull; Foreword by Ed Yourdon Previous ed.: 1999. Includes bibliographical references and index.",
    "dc:subject":
    [
        "Arbeit",
        "Business Analysis",
        "computer science",
        "computers",
        "I.T",
        "management",
        "managing",
        "modeling",
        "non-fiction",
        "process",
        "programming",
        "project management",
        "requirements",
        "requirements engineering",
        "software",
        "software development",
        "software engineering",
        "software requirements",
        "usability",
        "use cases",
        "The Requirements Problem",
        "A Look at the Data",
        "Root Causes of Project Success and Failure",
        "The Frequency of Requirements Errors",
        "The High Cost of Requirements Errors",
        "Introduction to Requirements Management",
        "What Is Requirements Management?",
        "Application of Requirements Management Techniques",
        "Systems Applications",
        "The Road Map",
        "The Problem Domain",
        "Stakeholder Needs",
        "Moving Toward the Solution Domain",
        "Features of the System",
        "Software Requirements",
        "An Introduction to Use Cases",
        "The Software Team",
        "Software Development as a Team Activity",
        "Requisite Team Skills for Effective Requirements Management",
        "Team Members Have Different Skills",
        "The Organization of Software Teams",
        "The Case Study"
        "Background for the Case Study",
        "The HOLIS Software Development Team",
        "Team Skill 2 Analyzing the Problem",
        "The Five Steps in Problem Analysis",
        "Gain Agreement on the Problem Definition",
        "The Problem Statement",
        "Understand the Root Causes",
        "The Problem Behind the Problem",
        "Addressing the Root Cause",
        "Identify the Stakeholders and the Users",
        "Define the Solution System Boundary",
        "Identify the Constraints to Be Imposed on the Solution",
        "Business Modeling",
        "Purpose of Business Modeling",
        "Using Software Engineering Techniques for Business Modeling",
        "Choosing the Right Technique",
        "The Unified Modeling Language (UML)",
        "Business Modeling Using UML Concepts",
        "From the Business Models to the Systems Model",
        "When to Use Business Modeling",
        "Systems Engineering of Software-Intensive Systems",
        "What Is Systems Engineering?",
        "Pragmatic Principles of Systems Engineering",
        "The Composition and Decomposition of Complex Systems",
        "Requirements Allocation in Systems Engineering",
        "On Derived Requirements",
        "A Quiet Revolution",
        "When Generations Collide: Graybeard Meets Young Whippersnapper",
        "Avoiding the Stovepipe System Problem",
        "When Subsystems Are Subcontracts",
        "Making It Work Out Right",
        "Preliminary User Needs",
        "Problem Analysis",
        "HOLIS: The System, Actors, and Stakeholders",
        "HOLIS Systems Engineering",
        "The Subsystems of HOLIS",
        "Team Skill 3 Understanding User Needs",
        "The Challenge of Requirements Elicitation",
        "Barriers to Elicitation",
        "The "Undiscovered Ruins" Syndrome",
        "The "User and the Developer" Syndrome",
        "Techniques for Requirements Elicitation",
        "The Features of a Product or System",
        "Stakeholder and User Needs",
        "Features",
        "Managing Complexity by Picking the Level of Abstraction",
        "Attributes of Product Features",
        "Interviewing",
        "The Interview Context ",
        "Value-Added Context",
        "The Moment of Truth: The Interview",
        "Compiling the Need Data",
        "The Analyst's Summary",
        "Requirements Workshops",
        "Preparing for the Workshop",
        "Selling the Concept",
        "Ensuring the Participation of the Right Stakeholders",
        "Logistics",
        "Warm-Up Materials",
        "Role of the Facilitator",
        "Setting the Agenda",
        "Running the Workshop",
        "Brainstorming and Idea Reduction",
        "Production and Follow-Up",
        "Brainstorming and Idea Reduction",
        "Live Brainstorming",
        "Idea Reduction",
        "Pruning",
        "Grouping Ideas",
        "Feature Definition",
        "Prioritization",
        "Web-Based Brainstorming",
        "The Case Study: The HOLIS 2000 Requirements Workshop",
        "Attendees",
        "The Workshop",
        "The Session",
        "Analysis of Results",
        "Storyboarding",
        "Types of Storyboards",
        "What Storyboards Do",
        "Tools and Techniques for Storyboarding",
        "Tips for Storyboarding",
        "Applying Use Cases",
        "Building the Use-Case Model",
        "Applying Use Cases to Requirements Elicitation",
        "The Use Cases for HOLIS",
        "Role Playing",
        "How to Role Play",
        "Techniques Similar to Role Playing",
        "Scripted Walkthroughs",
        "CRC (Class-Responsibility-Collaboration) Cards",
        "Prototyping",
        "Types of Prototypes",
        "Requirements Prototypes",
        "What to Prototype",
        "Building the Prototype",
        "Evaluating the Results",
        "Team Skill 4 Defining the System",
        "Organizing Requirements Information",
        "Organizing Requirements of Complex Hardware and Software Systems",
        "Organizing Requirements for Product Families",
        "On Future Requirements",
        "Business and Marketing Requirements versus Product Requirements",
        "The Case Study",
        "The Vision Document",
        "Components of the Vision Document",
        "The Delta Vision Document",
        "Vision Document for Release 1.0 ",
        "Vision Document for Version 2.0",
        "The Delta Vision Document in a Legacy System Environment",
        "The Champion",
        "The Role of the Product Champion",
        "The Product Champion in a Software Product Environment",
        "The Product Champion in an IS/IT Shop",
        "Team Skill 5 Managing Scope",
        "The Problem of Project Scope",
        "Components of Project Scope",
        "Establishing Project Scope",
        "Setting Priorities ",
        "Assessing Effort",
        "Adding the Risk Element",
        "Reducing Scope",
        "A Reasonable First Estimate",
        "Managing Your Customer",
        "Engaging Customers to Manage Their Project Scope",
        "Communicating the Result",
        "Negotiating with the Customer",
        "Managing the Baseline",
        "Official Change",
        "Unofficial Change",
        "Scope Management and Software Development Process Models",
        "The Waterfall Model",
        "The Spiral Model",
        "The Iterative Approach",
        "Lifecycle Phases",
        "Iterations",
        "Workflows",
        "Team Skill 6 Refining the System Definition",
        "Software Requirements",
        "Definition of Software Requirements",
        "Relationship between Features and Software Requirements",
        "The Requirements Dilemma: What versus How",
        "Exclude Project Information",
        "Exclude Design Information",
        "More on Requirements versus Design",
        "Iterating Requirements and Design",
        "A Further Characterization of Requirements",
        "Functional Software Requirements",
        "Nonfunctional Software Requirements",
        "Design Constraints",
        "Are Design Constraints True Requirements?",
        "Using Parent-Child Requirements to Increase Specificity",
        "Organizing Parent-Child Requirements",
        "Refining the Use Cases",
        "When Are Use Cases Not the Best Choice?",
        "The Redundancy Problem",
        "Refining Use-Case Specifications",
        "How Use Cases Evolve",
        "The Scope of a Use Case",
        "Anatomy of a Simple Use Case",
        "Define the Actor(s)",
        "Define the Use Case by Naming It",
        "Write a Brief Description",
        "Define a Flow of Events",
        "Identify Pre- and Postconditions",
        "Looking Ahead",
        "A Modern Software Requirements Specification",
        "The Modern SRS Package",
        "Who Owns the SRS Package?",
        "Organizing the Modern SRS Package",
        "Documenting Functional Requirements",
        "On Ambiguity and Specificity",
        "Mary Had a Little Lamb",
        "Techniques for Disambiguation",
        "Quality Measures of Software Requirements",
        "Nine Quality Measures",
        "Correct Requirements",
        "Unambiguous Requirements",
        "Completeness of the Requirements Set",
        "Consistency in the Requirements Set",
        "Requirements Ranked for Importance and Stability",
        "Verifiable Requirement",
        "Modifiable Requirements Set",
        "Traceable Requirements",
        "Understandable Requirements",
        "Quality Measures for the Use-Case Model",
        "Use-Case Specifications",
        "Use-Case Actors",
        "Quality Measures of the Modern SRS Package",
        "A Good Table of Contents",
        "A Good Index",
        "A Revision History",
        "Technical Methods for Specifying Requirements",
        "Pseudocode",
        "Finite State Machines",
        "Decision Trees and Decision Tables",
        "Graphical Decision Trees",
        "Activity Diagrams",
        "Entity-Relationship Models",
        "Object-Oriented Modeling",
        "Data Flow Diagrams",
        "Maintenance of Specifications",
        "Team Skill 7 Building the Right System",
        "Building the Right System Right: Overview",
        "Continually Confirm that the Development Is on Track",
        "Principles of Software Verification",
        "The Cost of Verification",
        "Verification at All Levels",
        "The Reason for Verification",
        "Confirm that the Development Results Are Correct",
        "Learn How to Cope with Change that Occurs during the Development Process",
        "From Requirements to Implementation",
        "Mapping Requirements to Design and Code",
        "The Orthogonality Problem",
        "Object Orientation",
        "The Use Case as a Requirement"
    ],
}
